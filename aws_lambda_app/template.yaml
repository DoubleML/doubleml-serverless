AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: SAM Template for doubleml-serverless

Metadata:
  AWS::ServerlessRepo::Application:
    Name: doubleml-serverless
    Description: Distributed Double Machine Learning with AWS Lambda
    Author: Malte S. Kurz
    SpdxLicenseId: MIT
    LicenseUrl: ../LICENSE
    ReadmeUrl: ../README.md
    Labels: ['machine-learning', 'python', 'ml', 'scikit-learn']
    SemanticVersion: 0.0.1

Globals:
  Function:
    Timeout: 180

Parameters:
  CreateS3BucketForDataTransfer:
    Type: String
    AllowedValues:
      - 'y'
      - 'n'
    Default: 'n'
    Description: 'Choose y to create the S3 bucket for data transfer to lambda'

  S3BucketName:
    Type: String
    Default: doubleml-serverless-data
    Description: 'Name of the S3 bucket used for data transfer to lambda'

Conditions:
  CreateS3Bucket: !Equals [ !Ref CreateS3BucketForDataTransfer, y ]

Resources:
  LambdaCVPredict:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambda_functions/
      Handler: cv_predict.lambda_cv_predict
      FunctionName: LambdaCVPredict
      Layers:
        - Ref: SklearnPandasLayer
      Runtime: python3.8
      Timeout: 180
      MemorySize: 1024
      Policies:
        - AWSLambdaBasicExecutionRole
        - S3ReadPolicy:
            BucketName:
              Ref: S3BucketName

  SklearnPandasLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: lambda_layers/
      CompatibleRuntimes:
        - python3.8
    Metadata:
      BuildMethod: python3.8

  DataS3Bucket:
    Type: 'AWS::S3::Bucket'
    Condition: CreateS3Bucket
    Description: 'S3 bucket for data transfer to lambda'
    Properties:
      BucketName:
        Ref: S3BucketName
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
